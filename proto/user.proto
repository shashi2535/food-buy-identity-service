syntax = "proto3";

package user;

service UserService {
  rpc checkHealth (Empty) returns (Response) {};
  rpc registerOwner (RegisterUserReq) returns (RegisterUserRes) {};
  rpc verifyOtp (verifyOtpReq) returns (verifyOtpRes) {};
  rpc resendOtp (resendOtpReq) returns (RegisterUserRes) {};
  rpc loginOwner(loginRequest) returns (RegisterUserRes){};
  rpc verifyToken (VerifyTokenReq) returns (UserDetailsRes) {};
}

message Empty {}

message Response {
  string message = 1;
  bool status = 2; 
}
message verifyOtpReq{
  optional string email=1;
  optional string otp=2;
  optional string phone=3;
}
message RegisterUserReq {
  string name = 1;
  string email =2;
  string role=3;
  int32 id=4;
}
message RegisterUserData {
  optional  int32 id = 1;
  optional  string name = 2;
  optional  string email = 3;
  optional  string token =4;
  optional  string otp =5;
  optional bool isEmailLogin=6;
  optional bool isPhoneLogin=7;
  optional string phone=8;
  optional  string  createdAt = 9;
  optional  string updatedAt =10;
}

message RegisterUserRes{
  optional  bool status = 1;
  optional  string message = 2;
  optional  RegisterUserData result =3;
}
message verifyOtpData{
  optional  string token =1;
  optional  string id =2;
}
message verifyOtpRes{
  optional  bool status = 1;
  optional  string message = 2;
  optional  verifyOtpData result =3;
}
message resendOtpReq{
  optional string phone=1;
  optional string email=2;
}

message loginRequest{
  optional string phone=1;
  optional string email=2;
  optional string role=3;
}


message VerifyTokenReq {
  string token = 1;
}

message UserDetails {
  int32 id = 1;
  int32 roleId = 2;
  string name = 3;
  string email = 4;
  string phone = 5;
  string role = 6;
  bool isVerified = 7;
}

message UserDetailsRes {
  string message = 1;
  bool status = 2;
  UserDetails data = 3; 
}